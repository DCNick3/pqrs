//
// Created by dcnick3 on 2/8/21.
//

#include <pqrs/qr_version_info.h>

namespace pqrs {
    namespace {inline constexpr std::array<version_info, 40> compute_versions() {
            std::array<version_info, 40> vv{};

            constexpr auto add = [](std::array<version_info, 40>& versions,
                                    int version, int alignment_count, std::array<int, version_info::max_alignment> alignment,
                                    int total_code_words, block_info l, block_info m, block_info q, block_info h) constexpr {
                return versions[version - 1] =
                               version_info(alignment_count, alignment, total_code_words,
                                            l, m, q, h);
            };

            add(vv, 1, 0, {}, 26,
                {26, 19, 1}, {26, 16, 1}, {26, 13, 1}, {26, 9, 1 });

            add(vv, 2, 2, {6, 18}, 44,
                {44, 34, 1}, {44, 28, 1}, {44, 22, 1}, {44, 16, 1});

            add(vv, 3, 2, {6, 22}, 70,
                {70, 55, 1}, {70, 44, 1}, {35, 17, 2}, {35, 13, 2});

            add(vv, 4, 2, {6, 26}, 100,
                {100, 80, 1}, {50, 32, 2 }, {50, 24, 2 }, {25, 9, 4  });

            add(vv, 5, 2, {6, 30}, 134,
                {134, 108, 1}, {67, 43, 2  }, {33, 15, 2  }, {33, 11, 2  });

            add(vv, 6, 2, {6, 34}, 172,
                {86, 68, 2}, {43, 27, 4}, {43, 19, 4}, {43, 15, 4});

            add(vv, 7, 3, {6, 22, 38}, 196,
                {98, 78, 2}, {49, 31, 4}, {32, 14, 2}, {39, 13, 4});

            add(vv, 8, 3, {6, 24, 42}, 242,
                {121, 97, 2}, {60, 38, 2 }, {40, 18, 4 }, {40, 14, 4 });

            add(vv, 9, 3, {6, 26, 46}, 292,
                {146, 116, 2}, {58, 36, 3  }, {36, 16, 4  }, {36, 12, 4  });

            add(vv, 10, 3, {6, 28, 50}, 346,
                {86, 68, 2}, {69, 43, 4}, {43, 19, 6}, {43, 15, 6});

            add(vv, 11, 3, {6, 30, 54}, 404,
                {101, 81, 4}, {80, 50, 1 }, {50, 22, 4 }, {36, 12, 3 });

            add(vv, 12, 3, {6, 32, 58}, 446,
                {116, 92, 2}, {58, 36, 6 }, {46, 20, 4 }, {42, 14, 7 });

            add(vv, 13, 3, {6, 34, 62}, 532,
                {133, 107, 4}, {59, 37, 8  }, {44, 20, 8  }, {33, 11, 12 });

            add(vv, 14, 4, {6, 26, 46, 66}, 581,
                {145, 115, 3}, {64, 40, 4  }, {36, 16, 11 }, {36, 12, 11 });

            add(vv, 15, 4, {6, 26, 48, 70}, 655,
                {109, 87, 5}, {65, 41, 5 }, {54, 24, 5 }, {36, 12, 11});

            add(vv, 16, 4, {6, 26, 50, 74}, 733,
                {122, 98, 5}, {73, 45, 7 }, {43, 19, 15}, {45, 15, 3 });

            add(vv, 17, 4, {6, 30, 54, 78}, 815,
                {135, 107, 1}, {74, 46, 10 }, {50, 22, 1  }, {42, 14, 2  });

            add(vv, 18, 4, {6, 30, 56, 82}, 815,
                {150, 120, 5}, {69, 43, 9  }, {50, 22, 17 }, {42, 14, 2  });

            add(vv, 19, 4, {6, 30, 58, 86}, 815,
                {141, 113, 3}, {70, 44, 3  }, {47, 21, 17 }, {39, 13, 9  });

            add(vv, 20, 4, {6, 34, 62, 90}, 815,
                {135, 107, 3}, {67, 41, 3  }, {54, 24, 15 }, {43, 15, 15 });

            add(vv, 21, 5, {6, 28, 50, 72, 94}, 1156,
                {144, 116, 4}, {68, 42, 17 }, {50, 22, 17 }, {46, 16, 19 });

            add(vv, 22, 5, {6, 26, 50, 74, 98}, 1258,
                {139, 111, 2}, {74, 46, 17 }, {54, 24, 7  }, {37, 13, 34 });

            add(vv, 23, 5, {6, 30, 54, 78, 102}, 1364,
                {151, 121, 4}, {75, 47, 4  }, {54, 24, 11 }, {45, 15, 16 });

            add(vv, 24, 5, {6, 28, 54, 80, 106}, 1474,
                {147, 117, 6}, {73, 45, 6  }, {54, 24, 11 }, {46, 16, 30 });

            add(vv, 25, 5, {6, 32, 58, 84, 110}, 1588,
                {132, 106, 8}, {75, 47, 8  }, {54, 24, 7  }, {45, 15, 22 });

            add(vv, 26, 5, {6, 30, 58, 86, 114}, 1706,
                {142, 114, 10}, {74, 46, 19  }, {50, 22, 28  }, {46, 16, 33  });

            add(vv, 27, 5, {6, 34, 62, 90, 118}, 1828,
                {152, 122, 8}, {73, 45, 22 }, {53, 23, 8  }, {45, 15, 12 });

            add(vv, 28, 6, {6, 26, 50, 74, 98, 122}, 1921,
                {147, 117, 3}, {73, 45, 3  }, {54, 24, 4  }, {45, 15, 11 });

            add(vv, 29, 6, {6, 30, 54, 78, 102, 126}, 2051,
                {146, 116, 7}, {73, 45, 21 }, {53, 23, 1  }, {45, 15, 19 });

            add(vv, 30, 6, {6, 26, 52, 78, 104, 130}, 2185,
                {145, 115, 5}, {75, 47, 19 }, {54, 24, 15 }, {45, 15, 23 });

            add(vv, 31, 6, {6, 30, 56, 82, 108, 134}, 2323,
                {145, 115, 13}, {74, 46, 2   }, {54, 24, 42  }, {45, 15, 23  });

            add(vv, 32, 6, {6, 34, 60, 86, 112, 138}, 2465,
                {145, 115, 17}, {74, 46, 10  }, {54, 24, 10  }, {45, 15, 19  });

            add(vv, 33, 6, {6, 30, 58, 86, 114, 142}, 2611,
                {145, 115, 17}, {74, 46, 14  }, {54, 24, 29  }, {45, 15, 11  });

            add(vv, 34, 6, {6, 34, 62, 90, 118, 146}, 2761,
                {145, 115, 13}, {74, 46, 14  }, {54, 24, 44  }, {46, 16, 59  });

            add(vv, 35, 7, {6, 30, 54, 78, 102, 126, 150}, 2876,
                {151, 121, 12}, {75, 47, 12  }, {54, 24, 39  }, {45, 15, 22  });

            add(vv, 36, 7, {6, 24, 50, 76, 102, 128, 154}, 3034,
                {151, 121, 6}, {75, 47, 6  }, {54, 24, 46 }, {45, 15, 2  });

            add(vv, 37, 7, {6, 28, 54, 80, 106, 132, 158}, 3196,
                {152, 122, 17}, {74, 46, 29  }, {54, 24, 49  }, {45, 15, 24  });

            add(vv, 38, 7, {6, 32, 58, 84, 110, 136, 162}, 3362,
                {152, 122, 4}, {74, 46, 13 }, {54, 24, 48 }, {45, 15, 42 });

            add(vv, 39, 7, {6, 26, 54, 82, 110, 138, 166}, 3532,
                {147, 117, 20}, {75, 47, 40  }, {54, 24, 43  }, {45, 15, 10  });

            add(vv, 40, 7, {6, 30, 58, 86, 114, 142, 170}, 3706,
                {148, 118, 19}, {75, 47, 18  }, {54, 24, 34  }, {45, 15, 20  });

            return vv;
        }
    }

    version_info const &get_version_info(int version) {
        static constexpr std::array<version_info, 40> versions = compute_versions();
        assert(version >= 1 && version < 40);
        return versions[version - 1];
    }
}
